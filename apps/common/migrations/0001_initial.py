# Generated by Django 4.2 on 2024-03-31 10:33
from django.db import migrations, models
import django.db.models.deletion
import location_field.models.plain


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('title', models.CharField(choices=[('Hashar', 'Hashar'), ('Animals Feeding', 'Animals Feeding')], default='Hashar', max_length=255, unique=True, verbose_name='Event Type')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Tashkent City', 'Tashkent City'), ('Tashkent Region', 'Tashkent Region'), ('Andijan', 'Andijan Region'), ('Namangan', 'Namangan Region'), ('Fergana', 'Fergana Region'), ('Sirdarya', 'Sirdarya Region'), ('Jizzah', 'Jizzah Region'), ('Samarqand', 'Samarqand Region'), ('Qashqadarya', 'Qashqadarya Region'), ('Surkhandarya', 'Surkhandarya Region'), ('Bukhara', 'Bukhara Region'), ('Navoi', 'Navoi Region'), ('Xorazm', 'Xorazm Region'), ('Karakalpak Republik', 'Karakalpak Republik')], default='Tashkent City', max_length=255, unique=True, verbose_name='Street name (Arentir)')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'db_table': 'Region',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='images/')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('short_description', models.CharField(max_length=256, verbose_name='Short Description')),
                ('content', models.TextField(verbose_name='Content')),
                ('slug', models.SlugField(blank=True, max_length=256)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag', models.ManyToManyField(blank=True, related_name='posts', to='common.tag')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('location', location_field.models.plain.PlainLocationField(default='41.311151,69.279737', max_length=63)),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('arentir', models.CharField(max_length=255, verbose_name='Street name (Arentir)')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='common.event')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='common.region')),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Position',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='uploads/%Y/%m/%d/', verbose_name='File')),
                ('file_type', models.CharField(choices=[('video', 'Video'), ('image', 'Image')], max_length=255, verbose_name='File Type')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.position')),
            ],
            options={
                'verbose_name': 'Media',
                'verbose_name_plural': 'Media',
            },
        ),
    ]
